# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_Chains_Tutorial.ipynb.

# %% auto 0
__all__ = ['llm_chain', 'chat_llm_chain', 'simple_sequential_chain']

# %% ../nbs/01_Chains_Tutorial.ipynb 1
from langchain.llms import OpenAI

from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain

# %% ../nbs/01_Chains_Tutorial.ipynb 3
def _get_llm_and_prompt():
    llm = OpenAI(temperature=0.9)
    prompt = PromptTemplate(
        input_variables=["product"],
        template="What is a good name for a company that makes {product}?",
    )
    return llm , prompt

def llm_chain(user_input):
    llm, prompt = _get_llm_and_prompt()
    chain = LLMChain(llm=llm, prompt=prompt)
    return chain.run(user_input)

# %% ../nbs/01_Chains_Tutorial.ipynb 6
from langchain.chat_models import ChatOpenAI
from langchain.prompts.chat import (
    ChatPromptTemplate,
    HumanMessagePromptTemplate,
)

def _get_chat_llm_and_prompt():
    llm = ChatOpenAI(temperature=0.9)
    prompt = PromptTemplate(
        input_variables=["product"],
        template="What is a good name for a company that makes {product}?",
    )
    return llm , prompt

def chat_llm_chain(user_input):
    llm, prompt = _get_chat_llm_and_prompt()
    human_message_prompt = HumanMessagePromptTemplate(prompt=prompt)
    chat_prompt_template = ChatPromptTemplate.from_messages([human_message_prompt])
    chain = LLMChain(llm=llm, prompt=chat_prompt_template)
    return chain.run(user_input)

# %% ../nbs/01_Chains_Tutorial.ipynb 9
from langchain.chains import SimpleSequentialChain

def _get_first_chain():
    llm = ChatOpenAI(temperature=0.9)
    prompt = PromptTemplate(
        input_variables=["product"],
        template="What is a good name for a company that makes {product}?",
    )
    human_message_prompt = HumanMessagePromptTemplate(prompt=prompt)
    chat_prompt_template = ChatPromptTemplate.from_messages([human_message_prompt])
    chain = LLMChain(llm=llm, prompt=chat_prompt_template)
    return chain
    
def _get_second_chain():
    llm = ChatOpenAI(temperature=0.9)
    prompt = PromptTemplate(
        input_variables=["company_name"],
        template="Write a catchphrase with exactly 3 words for the following company: {company_name}?",
    )
    human_message_prompt = HumanMessagePromptTemplate(prompt=prompt)
    chat_prompt_template = ChatPromptTemplate.from_messages([human_message_prompt])
    chain = LLMChain(llm=llm, prompt=chat_prompt_template)
    return chain

def simple_sequential_chain(text: str):
    overall_chain = SimpleSequentialChain(chains=[_get_first_chain(), _get_second_chain()], verbose=True)
    catchphrase = overall_chain.run(text)
    return catchphrase
